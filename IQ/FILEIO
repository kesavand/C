Q what are the file operations in C explain the built in functions ?
ANS:
Creation of a new file (fopen with attributes as “a” or “a+” or “w” or “w+”)
Opening an existing file (fopen)
Reading from file (fgets or fread)
Writing to a file (fputs or fwrite)
Moving to a specific location in a file (fseek, rewind)
Closing a file (fclose)

Built in functions

fopen
=====
FILE *fopen(filename, "attribute") Opens the filename pointed to by filename 
 using the given mode.

   
fgets
=====
char *fgets(char *str, int n, FILE *stream)

Description:
The C library function char *fgets(char *str, int n, FILE *stream) reads a line
from the specified stream and stores it into the string pointed to by str. 
It stops when either (n-1) characters are read, the newline character is read,
or the end-of-file is reached, whichever comes first.

NOTE1: The fputs adds null character to the buffer.

Parameters:
str − This is the pointer to an array of chars where the string read is stored.

n − This is the maximum number of characters to be read (including the final 
null-character). Usually, the length of the array passed as str is used.

stream − This is the pointer to a FILE object that identifies the 
stream where characters are read from.

Return Value:
On success, the function returns the same str parameter. 
If the End-of-File is encountered and no characters have been read, 
the contents of str remain unchanged and a null pointer is returned.
If an error occurs, a null pointer is returned.

fread
=====

size_t fread(void *ptr, size_t size, size_t nmemb, FILE *stream)

Description:
reads data from the given stream into the array pointed to, by ptr.

Parameters:
ptr − This is the pointer to a block of memory with a minimum size of size of nmemb bytes.
size − This is the size in bytes of each element to be read.
nmemb − This is the number of elements, each one with a size of size bytes.
stream − This is the pointer to a FILE object that specifies an input stream.

Return Value
The total number of elements successfully read are returned as a size_t object, 
which is an integral data type. If this number differs from the nmemb parameter,
then either an error had occurred or the End Of File was reached.

fputs
=====
int fputs(const char *str, FILE *stream)

Description:
writes a string to the specified stream up to but not including 
the null character.

NOTE1: The fputs does not add the null character to the file.
NOTE2: The parameter is const char * , not just char *

Parameters:
str − This is an array containing the null-terminated sequence of 
characters to be written.

stream − This is the pointer to a FILE object that identifies the stream 
where the string is to be written.

Return Value:
This function returns a non-negative value, or else on error it returns EOF.

fwrite
======
size_t fwrite(const void *ptr, size_t size, size_t nmemb, FILE *stream)

Description:
writes data from the array pointed to, by ptr to the given stream.
NOTE1: The parameter is char * not const char * 

Parameters:
ptr − This is the pointer to the array of elements to be written.
size − This is the size in bytes of each element to be written.
nmemb − This is the number of elements, each one with a size of size bytes.
stream − This is the pointer to a FILE object that specifies an output stream.

Return Value:
This function returns the total number of elements successfully returned as a 
size_t object, which is an integral data type. If this number differs 
from the nmemb parameter, it will show an error.

fseek
=====
int fseek(FILE *stream, long int offset, int whence)

Description:
sets the file position of the stream to the given offset.

Parameters:
stream − This is the pointer to a FILE object that identifies the stream.
offset − This is the number of bytes to offset from whence.
whence − This is the position from where offset is added. 
It is specified by one of the following constants 
SEEK_SET - Beginning of file
SEEK_CUR - Current position of the file pointer
SEEK_END - End of file

Return Value:
This function returns zero if successful, or else it returns a non-zero value.

fclose
======
int fclose(FILE *stream)

Description:
closes the stream. All buffers are flushed.

Parameters:
stream − This is the pointer to a FILE object that specifies the stream to be closed.

Return Value:
This method returns zero if the stream is successfully closed. On failure, EOF is returned.


what does fopen return when unable to open file ?
NULL

what are the  different file opening modes
r = read mode only , file should exist otherwise return null
r+ = update(read/write) mode, file should exist otherwies return null 
w = write mode only,if the file already exists override it (empty it) otherwise create the file
w+ = update(read/write mode), if the file already exists override it (empty it) otherwise create the file
a = append, file is created if not present
a+ = Opens a file for reading and appending,file is created if not present


what is rewind function?
void rewind(FILE *stream) sets the file position to the beginning of the file of the given stream.

which is preferred fseek or rewind ?
fseek is preferred because in rewind, there is no way to check if the operations completed successfully 

What is stream in c programming language?
it is linear queue which connect file to program and passes block of data 
in both direction .it is independent of devices which we are using. 
We can also define stream as source of data. This source can be
(a) A file
(b) Hard disk or CD, DVD etc.
(c) I/O devices etc.
there are two type of stream.
(a) Text streams
(b) Binary streams

what is a file pointer ?
FILE pointer is a pointer to a struct data type FILE.

What is difference between file opening mode r+ and w+ in c?

Both r+ and w+ we can read ,write on file but r+ does not truncate 
(delete) the content of file  as well it doesn’t create a new file 
if such file doesn’t exits while in w+ truncate the content of file
as well as create a new file if such file doesn’t exists.

what is fstat function ?
Function int fstat (char *, struct stat *) store the information of 
open file in form of structure struct stat Structure struct stat 
has been defined in sys\stat.h as device where the file is stored and also
mode and size of the file.

what is the value of EOF ?
the value of EOF is -1
